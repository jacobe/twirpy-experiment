# -*- coding: utf-8 -*-
# Generated by https://github.com/verloop/twirpy/protoc-gen-twirpy.  DO NOT EDIT!
# source: test/service.proto

from google.protobuf import symbol_database as _symbol_database

from twirp.base import Endpoint
from twirp.server import TwirpServer
from twirp.client import TwirpClient

_sym_db = _symbol_database.Default()

class TestServiceServer(TwirpServer):

	def __init__(self, *args, service, server_path_prefix="/twirp"):
		super().__init__(service=service)
		self._prefix = F"{server_path_prefix}/jacobe.twirpy_experiment.test.TestService"
		self._endpoints = {
			"ListTests": Endpoint(
				service_name="TestService",
				name="ListTests",
				function=getattr(service, "ListTests"),
				input=_sym_db.GetSymbol("jacobe.twirpy_experiment.test.ListTestsRequest"),
				output=_sym_db.GetSymbol("jacobe.twirpy_experiment.test.ListTestsResponse"),
			),
			"GetTest": Endpoint(
				service_name="TestService",
				name="GetTest",
				function=getattr(service, "GetTest"),
				input=_sym_db.GetSymbol("jacobe.twirpy_experiment.test.GetTestRequest"),
				output=_sym_db.GetSymbol("jacobe.twirpy_experiment.test.Test"),
			),
			"CreateTest": Endpoint(
				service_name="TestService",
				name="CreateTest",
				function=getattr(service, "CreateTest"),
				input=_sym_db.GetSymbol("jacobe.twirpy_experiment.test.CreateTestRequest"),
				output=_sym_db.GetSymbol("jacobe.twirpy_experiment.test.Test"),
			),
			"UpdateTest": Endpoint(
				service_name="TestService",
				name="UpdateTest",
				function=getattr(service, "UpdateTest"),
				input=_sym_db.GetSymbol("jacobe.twirpy_experiment.test.UpdateTestRequest"),
				output=_sym_db.GetSymbol("jacobe.twirpy_experiment.test.Test"),
			),
			"DeleteTest": Endpoint(
				service_name="TestService",
				name="DeleteTest",
				function=getattr(service, "DeleteTest"),
				input=_sym_db.GetSymbol("jacobe.twirpy_experiment.test.DeleteTestRequest"),
				output=_sym_db.GetSymbol("google.protobuf.Empty"),
			),
		}

class TestServiceClient(TwirpClient):

	def ListTests(self, *args, ctx, request, server_path_prefix="/twirp", **kwargs):
		return self._make_request(
			url=F"{server_path_prefix}/jacobe.twirpy_experiment.test.TestService/ListTests",
			ctx=ctx,
			request=request,
			response_obj=_sym_db.GetSymbol("jacobe.twirpy_experiment.test.ListTestsResponse"),
			**kwargs,
		)

	def GetTest(self, *args, ctx, request, server_path_prefix="/twirp", **kwargs):
		return self._make_request(
			url=F"{server_path_prefix}/jacobe.twirpy_experiment.test.TestService/GetTest",
			ctx=ctx,
			request=request,
			response_obj=_sym_db.GetSymbol("jacobe.twirpy_experiment.test.Test"),
			**kwargs,
		)

	def CreateTest(self, *args, ctx, request, server_path_prefix="/twirp", **kwargs):
		return self._make_request(
			url=F"{server_path_prefix}/jacobe.twirpy_experiment.test.TestService/CreateTest",
			ctx=ctx,
			request=request,
			response_obj=_sym_db.GetSymbol("jacobe.twirpy_experiment.test.Test"),
			**kwargs,
		)

	def UpdateTest(self, *args, ctx, request, server_path_prefix="/twirp", **kwargs):
		return self._make_request(
			url=F"{server_path_prefix}/jacobe.twirpy_experiment.test.TestService/UpdateTest",
			ctx=ctx,
			request=request,
			response_obj=_sym_db.GetSymbol("jacobe.twirpy_experiment.test.Test"),
			**kwargs,
		)

	def DeleteTest(self, *args, ctx, request, server_path_prefix="/twirp", **kwargs):
		return self._make_request(
			url=F"{server_path_prefix}/jacobe.twirpy_experiment.test.TestService/DeleteTest",
			ctx=ctx,
			request=request,
			response_obj=_sym_db.GetSymbol("google.protobuf.Empty"),
			**kwargs,
		)
